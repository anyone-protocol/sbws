[metadata]
name = sbws
description = Simple Bandwidth Scanner
author = Matt Traudt, juga
author_email = {pastly, juga}@torproject.org
maintainer = Georg Koppen, juga
maintainer_email = {gk, juga}@torproject.org
contact = Georg Koppen, juga
contact_email = {gk, juga}@torproject.org
license = CC0
url = https://gitlab.torproject.org/tpo/network-health/sbws
keywords = tor onion bandwidth measurements scanner relay circuit
classifiers =
    Development Status :: 4 - Beta
    Environment :: Console
    Intended Audience :: Developers
    Intended Audience :: System Administrators
    License :: OSI Approved :: MIT License
    Natural Language :: English
    Operating System :: POSIX :: Linux
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
long_description = file: README.rst
license_files = LICENSE.rst
project_urls =
    Documentation = https://tpo.pages.torproject.net/network-health/sbws
    Source = https://gitlab.torproject.org/tpo/network-health/sbws
    Tracker = https://gitlab.torproject.org/tpo/network-health/sbws/-/issues

[options]
packages = find:
include_package_data = True
# See stable releases at https://www.python.org/downloads/
python_requires = >= 3.7
install_requires =
    psutil >= 5.5
    stem >= 1.8.0
    ; # Now versioneer is also needed as dependency
    versioneer
    requests[socks]

[options.extras_require]
test =
  black
  codespell
  coverage
  flake8
  flake8-docstrings
  freezegun
  isort
  ; pylint  ; when we ever fix all the errors it throughs
  pytest
  pytest-mock
  tox
  sphinx
doc =
  sphinx
  pylint
dev =
  flake8
  flake8-docstrings
  isort
  vulture

[options.entry_points]
console_scripts =
    sbws = sbws.sbws:main

[tool:pytest]
log_cli=true
log_cli_level=DEBUG

[flake8]
max-line-length = 79
# D103 Missing docstring
# D400: First line should end with a period (not 't')
# D401: First line should be in imperative mood
# Compatibility with black
# W503 line break before binary operator
# E203 whitespace before ':'
extend-ignore = E203, W503, D1, D2, D4
exclude = docs/*,sbws/_version.py,sbws/__init__.py,versioneer.py

[codespell]
skip = versioneer.py,sbws/_version.py,sbws/util/iso3166.py,tests/data,*.puml,*.svg,docs/build,docs/source/proposals,docs/source/torflow_aggr.rst

[coverage:run]
# Do not give error on empty __init__ files
omit = */__init__.py
source = sbws

[aliases]
# Define setup.py command aliases here
test = pytest

# See the docstring in versioneer.py for instructions. Note that you must
# re-run 'versioneer.py setup' after changing this section, and commit the
# resulting files.
[versioneer]
VCS = git
# Will generate versions in the form TAG[+DISTANCE.gSHORTHASH[.dirty]] , using
# information from git describe --tags --dirty --always.
style = pep440
# A project-relative pathname into which the generated version strings should
# be written
versionfile_source = sbws/_version.py
# As versionfile_source, relative to the build directory.
versionfile_build = sbws/_version.py
# Strimg at the start of all VCS tags.
tag_prefix = v
# String at the start of all unpacked tarball filenames.
parentdir_prefix = sbws-
